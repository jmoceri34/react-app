{"version":3,"sources":["playlists/playlists.component.tsx"],"names":["require","Playlists","props","state","storedPlaylists","localStorage","getItem","playlists","JSON","parse","length","selectedPlaylist","undefined","isDragging","currentDraggableIndex","window","onbeforeunload","saveChanges","playlist","Id","this","Math","max","apply","map","p","Name","Videos","newPlaylists","push","setState","playlistId","filter","removeState","v","VideoId","StartTime","EndTime","Delay","videoId","e","index","propertyName","target","value","playlistIndex","videoIndex","setItem","stringify","parseInt","location","action","obj","expression","res","Object","keys","k","initial","provided","source","destination","result","videos","reorder","list","startIndex","endIndex","Array","from","splice","removed","draggableStyle","userSelect","height","marginRight","background","count","id","content","isDraggingOver","padding","width","element","variant","style","margin","label","defaultValue","onChange","handlePlaylistChange","nameof","color","onClick","addVideo","removePlaylist","onDragStart","onDragUpdate","onDragEnd","droppableId","snapshot","droppableProps","ref","innerRef","video","className","display","flexWrap","draggableId","toString","draggableProps","dragHandleProps","getItemStyle","src","marginBottom","handleVideoChange","type","inputProps","min","inputMode","pattern","alignSelf","removeVideo","placeholder","when","message","promptMessageCallback","displayEmpty","renderValue","handlePlaylistDropdownChange","addPlaylist","Component"],"mappings":"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","file":"static/js/10.dc3bce40.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { Playlist } from \"./playlist.model\";\r\nimport { Prompt } from \"react-router\";\r\nimport * as H from 'history';\r\nimport { Video } from \"./video.model\";\r\nimport { Button, Card, CardContent, MenuItem, Paper, Select, TextField } from \"@mui/material\";\r\nimport { DragDropContext, Draggable, DraggingStyle, DragStart, DragUpdate, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\r\nimport DragHandleIcon from '@mui/icons-material/DragHandle';\r\n\r\nrequire('jquery-ui/ui/widgets/slider');\r\n\r\nexport interface PlaylistProps {\r\n}\r\n\r\nexport interface PlaylistState {\r\n    playlists: Playlist[];\r\n    selectedPlaylist: number | undefined;\r\n    isDragging: boolean;\r\n    currentDraggableIndex: number | undefined;\r\n}\r\n\r\nclass Playlists extends Component<PlaylistProps, PlaylistState> {\r\n\r\n    state: PlaylistState;\r\n\r\n    constructor(props: PlaylistProps) {\r\n        super(props);\r\n\r\n        const storedPlaylists = localStorage.getItem(\"Playlists\");\r\n\r\n        let playlists = storedPlaylists !== null ? JSON.parse(storedPlaylists) : [];\r\n\r\n        if (playlists.length == 0) {\r\n            playlists = JSON.parse(\"[{\\\"Id\\\":1,\\\"Name\\\":\\\"ACâš¡DC Fingerbreaker I\\\",\\\"Videos\\\":[{\\\"Id\\\":1,\\\"Name\\\":\\\"Jailbreak\\\",\\\"VideoId\\\":\\\"HRo2m6RYJpI\\\",\\\"StartTime\\\":\\\"20\\\",\\\"EndTime\\\":\\\"53\\\",\\\"Delay\\\":0},{\\\"Id\\\":2,\\\"Name\\\":\\\"Soul Stripper\\\",\\\"VideoId\\\":\\\"Sn6bfNFUSU0\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"155\\\",\\\"Delay\\\":0},{\\\"Id\\\":3,\\\"Name\\\":\\\"Live Wire\\\",\\\"VideoId\\\":\\\"1gtLgAYCf5Y\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"95\\\",\\\"Delay\\\":0},{\\\"Id\\\":4,\\\"Name\\\":\\\"Let There Be Rock\\\",\\\"VideoId\\\":\\\"OvJrJcVAQQs\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"63\\\",\\\"Delay\\\":0},{\\\"Id\\\":5,\\\"Name\\\":\\\"Who Made Who\\\",\\\"VideoId\\\":\\\"PiZHNw1MtzI\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"205\\\",\\\"Delay\\\":0},{\\\"Id\\\":6,\\\"Name\\\":\\\"Thunderstruck\\\",\\\"VideoId\\\":\\\"v2AC41dglnM\\\",\\\"StartTime\\\":\\\"36\\\",\\\"EndTime\\\":\\\"192\\\",\\\"Delay\\\":0},{\\\"Id\\\":7,\\\"Name\\\":\\\"Dirty Deeds Done Dirt Cheap\\\",\\\"VideoId\\\":\\\"UIE4UjBtx-o\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"60\\\",\\\"Delay\\\":0},{\\\"Id\\\":8,\\\"Name\\\":\\\"Heatseeker\\\",\\\"VideoId\\\":\\\"VWG4-4Y6Z60\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"75\\\",\\\"Delay\\\":0},{\\\"Id\\\":9,\\\"Name\\\":\\\"War Machine\\\",\\\"VideoId\\\":\\\"0W2kXsQ5ZYc\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"53\\\",\\\"Delay\\\":0},{\\\"Id\\\":10,\\\"Name\\\":\\\"Riff Raff\\\",\\\"VideoId\\\":\\\"7S69xWkV4uM\\\",\\\"StartTime\\\":\\\"44\\\",\\\"EndTime\\\":\\\"121\\\",\\\"Delay\\\":0},{\\\"Id\\\":11,\\\"Name\\\":\\\"Shot Down In Flames\\\",\\\"VideoId\\\":\\\"UKwVvSleM6w\\\",\\\"StartTime\\\":\\\"15\\\",\\\"EndTime\\\":\\\"52\\\",\\\"Delay\\\":0},{\\\"Id\\\":12,\\\"Name\\\":\\\"If You Want Blood(You've Got It)\\\",\\\"VideoId\\\":\\\"6EWqTym2cQU\\\",\\\"StartTime\\\":\\\"35\\\",\\\"EndTime\\\":\\\"70\\\",\\\"Delay\\\":0},{\\\"Id\\\":13,\\\"Name\\\":\\\"Shoot To Thrill\\\",\\\"VideoId\\\":\\\"LIzPbnIp2QM\\\",\\\"StartTime\\\":\\\"12\\\",\\\"EndTime\\\":\\\"83\\\",\\\"Delay\\\":0},{\\\"Id\\\":14,\\\"Name\\\":\\\"Chase The Ace\\\",\\\"VideoId\\\":\\\"oYw-ZTLqIpg\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"181\\\",\\\"Delay\\\":0}]}]\");\r\n        }\r\n\r\n        let selectedPlaylist = undefined;\r\n\r\n        // show the first playlist if there are any\r\n        if (playlists.length > 0) {\r\n            selectedPlaylist = 0;\r\n        }\r\n\r\n        this.state = {\r\n            playlists: playlists,\r\n            selectedPlaylist: selectedPlaylist,\r\n            isDragging: false,\r\n            currentDraggableIndex: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onbeforeunload = () => {\r\n\r\n            // save on page refresh\r\n            this.saveChanges();\r\n\r\n            return '';\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.onbeforeunload = null;\r\n    }\r\n\r\n    addPlaylist(): void {\r\n\r\n        let playlist = {\r\n            Id: this.state.playlists.length > 0 ? Math.max.apply(Math, this.state.playlists.map((p) => { return p.Id })) + 1 : 1,\r\n            Name: '',\r\n            Videos: []\r\n        };\r\n\r\n        let newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists.push(playlist);\r\n\r\n        this.setState({\r\n            playlists: newPlaylists,\r\n            selectedPlaylist: newPlaylists.length - 1 // move to the new playlist\r\n        });\r\n    }\r\n\r\n    removePlaylist(playlistId: number): void {\r\n        let newPlaylists = [...this.state.playlists];\r\n        newPlaylists = newPlaylists.filter(p => p.Id !== playlistId);\r\n\r\n        let playlist = this.state.playlists[this.state.selectedPlaylist!];\r\n\r\n        // if you're on the playlist, remove the state and show empty\r\n        let removeState = playlist.Id === playlistId;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists,\r\n            selectedPlaylist: removeState ? undefined : this.state.selectedPlaylist\r\n        });\r\n    }\r\n\r\n    addVideo(playlistId: number): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n        let selectedPlaylist = newPlaylists.filter((p) => p.Id === playlistId)[0];\r\n\r\n        selectedPlaylist.Videos.push({\r\n            Id: selectedPlaylist.Videos.length > 0 ? Math.max.apply(Math, selectedPlaylist.Videos.map((v) => { return v.Id })) + 1 : 1,\r\n            Name: '',\r\n            VideoId: '',\r\n            StartTime: 0,\r\n            EndTime: 0,\r\n            Delay: 0\r\n        });\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    removeVideo(playlistId: number, videoId: number): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        let selectedPlaylist = newPlaylists.filter((p) => p.Id === playlistId)[0];\r\n\r\n        selectedPlaylist.Videos = selectedPlaylist.Videos.filter(v => v.Id !== videoId);\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    handlePlaylistChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number, propertyName: string): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists[index][propertyName] = e.target.value;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    handleVideoChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, playlistIndex: number, videoIndex: number, propertyName: string): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists[playlistIndex].Videos[videoIndex][propertyName] = e.target.value;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    saveChanges(): void {\r\n        localStorage.setItem(\"Playlists\", JSON.stringify(this.state.playlists));\r\n    }\r\n\r\n    handlePlaylistDropdownChange(e: any): void {\r\n\r\n        // save automatically when changing drop down\r\n        this.saveChanges();\r\n\r\n        this.setState({\r\n            selectedPlaylist: parseInt(e.target.value)\r\n        });\r\n    }\r\n\r\n    promptMessageCallback(location: H.Location, action: H.Action): string | boolean {\r\n        // save when navigating away\r\n        this.saveChanges();\r\n\r\n        // good to transition after\r\n        return true;\r\n    }\r\n\r\n    nameof<T>(obj: T, expression: Function): string {\r\n        const res: any = {};\r\n\r\n        Object.keys(obj).map(k => res[k] = () => k);\r\n\r\n        let result = expression(res)();\r\n\r\n        return result;\r\n    }\r\n\r\n    onDragStart(initial: DragStart, provided: ResponderProvided): void {\r\n        this.setState({\r\n            isDragging: true,\r\n            currentDraggableIndex: initial.source.index\r\n        });\r\n    }\r\n\r\n    onDragUpdate(initial: DragUpdate, provided: ResponderProvided): void {\r\n        if (!initial.destination) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            currentDraggableIndex: initial.destination!.index\r\n        });\r\n    }\r\n\r\n    onDragEnd(result: DropResult, provided: ResponderProvided): void {\r\n        let playlists = [...this.state.playlists];\r\n\r\n        // dropped outside the list\r\n        if (result.destination) {\r\n            const videos = this.reorder(\r\n                this.state.playlists[this.state.selectedPlaylist!].Videos,\r\n                result.source.index,\r\n                result.destination.index\r\n            );\r\n\r\n\r\n            playlists[this.state.selectedPlaylist!].Videos = videos;\r\n        }\r\n\r\n\r\n        this.setState({\r\n            playlists: playlists,\r\n            isDragging: false,\r\n        });\r\n    }\r\n\r\n\r\n    reorder(list: any[], startIndex: number, endIndex: number) {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n\r\n        return result;\r\n    };\r\n\r\n    getItemStyle(isDragging: boolean, draggableStyle: any) {\r\n        return {\r\n            // some basic styles to make the items look a bit nicer\r\n            userSelect: \"none\",\r\n            height: 45,\r\n            marginRight: 12,\r\n\r\n            // change background colour if dragging\r\n            background: isDragging ? \"lightgreen\" : \"white\",\r\n\r\n            // styles we need to apply on draggables\r\n            ...draggableStyle\r\n        };\r\n    }\r\n\r\n    getItems(count: number) {\r\n        return Array.from({ length: count }, (v, k) => k).map(k => ({\r\n            id: `item-${k}`,\r\n            content: `item ${k}`\r\n        }));\r\n    }\r\n\r\n    getListStyle(isDraggingOver: boolean) {\r\n        return {\r\n            background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n            padding: 8,\r\n            width: 250\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        let element: JSX.Element | undefined = undefined;\r\n\r\n        if (this.state.selectedPlaylist !== undefined) {\r\n            let playlist = this.state.playlists[this.state.selectedPlaylist];\r\n            let playlistIndex = this.state.selectedPlaylist;\r\n            element = (\r\n                <Card variant=\"outlined\" style={{ margin: '12px', padding: '0 !important' }} key={playlist.Id}>\r\n                    <CardContent style={{ padding: '0 !important' }}>\r\n                        <div>\r\n                            {/*<p><strong>Playlist #{playlistIndex + 1}</strong></p>*/}\r\n                            <TextField id=\"standard-basic\" label=\"Playlist Name\" defaultValue={playlist?.Name} onChange={e => this.handlePlaylistChange(e, playlistIndex, this.nameof(playlist, (p: Playlist) => p.Name))} style={{ width: \"400px\", \"marginRight\": \"12px\" }} />\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addVideo(playlist.Id) }} style={{ 'marginTop': \"12px\", \"marginRight\": '12px' }}>\r\n                                Add Video\r\n                            </Button>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.removePlaylist(playlist.Id) }} style={{ 'marginTop': \"12px\" }}>\r\n                                Remove Playlist\r\n                            </Button>\r\n                            <DragDropContext\r\n                                onDragStart={(initial: DragStart, provided: ResponderProvided) => this.onDragStart(initial, provided)}\r\n                                onDragUpdate={(initial: DragUpdate, provided: ResponderProvided) => this.onDragUpdate(initial, provided)}\r\n                                onDragEnd={(result: DropResult, provided: ResponderProvided) => this.onDragEnd(result, provided)}>\r\n                                <Droppable droppableId=\"droppable\">\r\n                                    {(provided, snapshot) => (\r\n                                        <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                            {\r\n                                                playlist.Videos.map((video, videoIndex) => {\r\n                                                    return (\r\n                                                        <Card className=\"changeColor\" variant=\"outlined\" style={{ \"margin\": \"12px\", background: this.state.isDragging ? (this.state.currentDraggableIndex == videoIndex ? '#ccc' : '#333') : '#fff' }} key={video.Id}>\r\n                                                            <CardContent>\r\n                                                                <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                                                                    <Draggable key={video.Id} draggableId={video.Id.toString()} index={videoIndex}>\r\n                                                                        {(provided, snapshot) => {\r\n                                                                            return (\r\n                                                                                <div\r\n                                                                                    ref={provided.innerRef}\r\n                                                                                    {...provided.draggableProps}\r\n                                                                                    {...provided.dragHandleProps}\r\n                                                                                    style={this.getItemStyle(\r\n                                                                                        snapshot.isDragging,\r\n                                                                                        provided.draggableProps.style\r\n                                                                                    )}\r\n                                                                                >\r\n                                                                                    <Paper>\r\n                                                                                        <DragHandleIcon color=\"primary\" style={{ height: '45px' }} />\r\n                                                                                    </Paper>\r\n                                                                                </div>\r\n                                                                            );\r\n                                                                        }\r\n                                                                        }\r\n\r\n                                                                    </Draggable>\r\n                                                                    <img src={\"https://img.youtube.com/vi/\" + video.VideoId + \"/hqdefault.jpg\"} style={{ width: '80x', height: '45px', \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                    <TextField id=\"standard-basic\" label=\"Video Name\" defaultValue={video.Name} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.Name))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                    <TextField id=\"standard-basic\" label=\"Video VideoId\" defaultValue={video.VideoId} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.VideoId))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                    <TextField type=\"number\" inputProps={{ min: 0, inputMode: 'numeric', pattern: '[0-9]*' }} id=\"standard-basic\" label=\"Video StartTime\" defaultValue={video.StartTime} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.StartTime))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                    <TextField type=\"number\" inputProps={{ min: 0, inputMode: 'numeric', pattern: '[0-9]*' }} id=\"standard-basic\" label=\"Video EndTime\" defaultValue={video.EndTime} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.EndTime))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                    <TextField type=\"number\" inputProps={{ min: 0, inputMode: 'numeric', pattern: '[0-9]*' }} id=\"standard-basic\" label=\"Video Delay\" defaultValue={video.Delay} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.Delay))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                    <div style={{ alignSelf: 'center' }}>\r\n                                                                        <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.removeVideo(playlist.Id, video.Id) }}>\r\n                                                                            Remove Video\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </CardContent>\r\n                                                        </Card>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </DragDropContext>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Prompt\r\n                    when={true}\r\n                    message={(location, action) => this.promptMessageCallback(location, action)}\r\n                />\r\n                <Card variant=\"outlined\" style={{ margin: '12px' }}>\r\n                    <CardContent>\r\n\r\n                        <h2>Playlists</h2>\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n\r\n                        </div>\r\n                        <Select\r\n                            label=\"Playlists\"\r\n                            displayEmpty\r\n                            renderValue={this.state.selectedPlaylist !== undefined ? () => this.state.playlists[this.state.selectedPlaylist!].Name : () => 'Playlists'}\r\n                            defaultValue=\"Playlists\"\r\n                            onChange={e => this.handlePlaylistDropdownChange(e)}\r\n                            style={{ marginRight: '24px', 'minWidth': '200px', marginBottom: '12px' }}>\r\n                            {\r\n                                this.state.playlists.map((playlist, playlistIndex) => {\r\n                                    return (\r\n                                        <MenuItem key={playlist.Id} value={playlistIndex}>#{playlist.Id}: {playlist.Name}</MenuItem>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addPlaylist() }} style={{ marginRight: '12px' }}>\r\n                            Add New Playlist\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.saveChanges() }} style={{ marginRight: '12px' }}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </CardContent>\r\n                </Card>\r\n                {/* Template for each playlist */}\r\n                {element}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Playlists;"],"sourceRoot":""}
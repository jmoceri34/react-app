{"version":3,"sources":["playlists/playlists.component.tsx"],"names":["require","Playlists","props","state","storedPlaylists","localStorage","getItem","playlists","JSON","parse","selectedPlaylist","undefined","length","window","onbeforeunload","saveChanges","playlist","Id","this","Math","max","apply","map","p","Name","Videos","newPlaylists","push","setState","playlistId","filter","removeState","v","VideoId","StartTime","EndTime","videoId","e","index","propertyName","target","value","playlistIndex","videoIndex","setItem","stringify","parseInt","location","action","obj","expression","res","Object","keys","k","element","variant","style","margin","padding","id","label","defaultValue","onChange","handlePlaylistChange","nameof","width","color","onClick","addVideo","removePlaylist","video","className","display","flexWrap","src","height","marginBottom","handleVideoChange","type","inputProps","min","inputMode","pattern","alignSelf","removeVideo","when","message","promptMessageCallback","displayEmpty","renderValue","handlePlaylistDropdownChange","marginRight","addPlaylist","Component"],"mappings":"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","file":"static/js/8.307960e7.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { Playlist } from \"./playlist.model\";\r\nimport { Prompt } from \"react-router\";\r\nimport * as H from 'history';\r\nimport { Video } from \"./video.model\";\r\nimport { Button, Card, CardContent, MenuItem, Select, TextField } from \"@mui/material\";\r\n\r\nrequire('jquery-ui/ui/widgets/slider');\r\n\r\nexport interface PlaylistProps {\r\n}\r\n\r\nexport interface PlaylistState {\r\n    playlists: Playlist[];\r\n    selectedPlaylist: number | undefined;\r\n}\r\n\r\nclass Playlists extends Component<PlaylistProps, PlaylistState> {\r\n\r\n    state: PlaylistState;\r\n\r\n    constructor(props: PlaylistProps) {\r\n        super(props);\r\n\r\n        const storedPlaylists = localStorage.getItem(\"Playlists\");\r\n\r\n        let playlists = storedPlaylists !== null ? JSON.parse(storedPlaylists) : [];\r\n\r\n        let selectedPlaylist = undefined;\r\n\r\n        // show the first playlist if there are any\r\n        if (playlists.length > 0) {\r\n            selectedPlaylist = 0;\r\n        }\r\n\r\n        this.state = {\r\n            playlists: playlists,\r\n            selectedPlaylist: selectedPlaylist\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onbeforeunload = () => {\r\n\r\n            // save on page refresh\r\n            this.saveChanges();\r\n\r\n            return '';\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.onbeforeunload = null;\r\n    }\r\n\r\n    addPlaylist(): void {\r\n\r\n        let playlist = {\r\n            Id: this.state.playlists.length > 0 ? Math.max.apply(Math, this.state.playlists.map((p) => { return p.Id })) + 1 : 1,\r\n            Name: '',\r\n            Videos: []\r\n        };\r\n\r\n        let newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists.push(playlist);\r\n\r\n        this.setState({\r\n            playlists: newPlaylists,\r\n            selectedPlaylist: newPlaylists.length - 1 // move to the new playlist\r\n        });\r\n    }\r\n\r\n    removePlaylist(playlistId: number): void {\r\n        let newPlaylists = [...this.state.playlists];\r\n        newPlaylists = newPlaylists.filter(p => p.Id !== playlistId);\r\n\r\n        let playlist = this.state.playlists[this.state.selectedPlaylist!];\r\n\r\n        // if you're on the playlist, remove the state and show empty\r\n        let removeState = playlist.Id === playlistId;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists,\r\n            selectedPlaylist: removeState ? undefined : this.state.selectedPlaylist\r\n        });\r\n    }\r\n\r\n    addVideo(playlistId: number): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n        let selectedPlaylist = newPlaylists.filter((p) => p.Id === playlistId)[0];\r\n\r\n        selectedPlaylist.Videos.push({\r\n            Id: selectedPlaylist.Videos.length > 0 ? Math.max.apply(Math, selectedPlaylist.Videos.map((v) => { return v.Id })) + 1 : 1,\r\n            Name: '',\r\n            VideoId: '',\r\n            StartTime: 0,\r\n            EndTime: 0\r\n        });\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    removeVideo(playlistId: number, videoId: number): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        let selectedPlaylist = newPlaylists.filter((p) => p.Id === playlistId)[0];\r\n\r\n        selectedPlaylist.Videos = selectedPlaylist.Videos.filter(v => v.Id !== videoId);\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    handlePlaylistChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number, propertyName: string): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists[index][propertyName] = e.target.value;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    handleVideoChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, playlistIndex: number, videoIndex: number, propertyName: string): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists[playlistIndex].Videos[videoIndex][propertyName] = e.target.value;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    saveChanges(): void {\r\n        localStorage.setItem(\"Playlists\", JSON.stringify(this.state.playlists));\r\n    }\r\n\r\n    handlePlaylistDropdownChange(e: any): void {\r\n\r\n        // save automatically when changing drop down\r\n        this.saveChanges();\r\n\r\n        this.setState({\r\n            selectedPlaylist: parseInt(e.target.value)\r\n        });\r\n    }\r\n\r\n    promptMessageCallback(location: H.Location, action: H.Action): string | boolean {\r\n        // save when navigating away\r\n        this.saveChanges();\r\n\r\n        // good to transition after\r\n        return true;\r\n    }\r\n\r\n    nameof<T>(obj: T, expression: Function): string {\r\n        const res: any = {};\r\n\r\n        Object.keys(obj).map(k => res[k] = () => k);\r\n\r\n        let result = expression(res)();\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n\r\n        let element: JSX.Element | undefined = undefined;\r\n\r\n        if (this.state.selectedPlaylist !== undefined) {\r\n            let playlist = this.state.playlists[this.state.selectedPlaylist];\r\n            let playlistIndex = this.state.selectedPlaylist;\r\n            element = (\r\n                <Card variant=\"outlined\" style={{ margin: '12px', padding: '0 !important' }} key={playlist.Id}>\r\n                    <CardContent style={{ padding: '0 !important' }}>\r\n                        <div>\r\n                            {/*<p><strong>Playlist #{playlistIndex + 1}</strong></p>*/}\r\n                            <TextField id=\"standard-basic\" label=\"Playlist Name\" defaultValue={playlist?.Name} onChange={e => this.handlePlaylistChange(e, playlistIndex, this.nameof(playlist, (p: Playlist) => p.Name))} style={{ width: \"400px\", \"marginRight\": \"12px\" }} />\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addVideo(playlist.Id) }} style={{ 'marginTop': \"12px\", \"marginRight\": '12px' }}>\r\n                                Add Video\r\n                            </Button>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.removePlaylist(playlist.Id) }} style={{ 'marginTop': \"12px\" }}>\r\n                                Remove Playlist\r\n                            </Button>\r\n                            {\r\n                                playlist.Videos.map((video, videoIndex) => {\r\n                                    return (\r\n                                        <Card className=\"changeColor\" variant=\"outlined\" style={{ \"margin\": \"12px\" }} key={video.Id}>\r\n                                            <CardContent>\r\n                                                <div style={{display: 'flex', flexWrap: 'wrap' }}>\r\n                                                    {/*<p><strong>Playlist #{playlistIndex + 1} Video #{videoIndex + 1}</strong></p>*/}\r\n                                                    <img src={\"https://img.youtube.com/vi/\" + video.VideoId + \"/hqdefault.jpg\"} style={{ width: '80x', height: '45px', \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                    <TextField id=\"standard-basic\" label=\"Video Name\" defaultValue={video.Name} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.Name))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                    <TextField id=\"standard-basic\" label=\"Video VideoId\" defaultValue={video.VideoId} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.VideoId))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                    <TextField type=\"number\" inputProps={{ min: 0, inputMode: 'numeric', pattern: '[0-9]*' }} id=\"standard-basic\" label=\"Video StartTime\" defaultValue={video.StartTime} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.StartTime))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                    <TextField type=\"number\" inputProps={{ min: 0, inputMode: 'numeric', pattern: '[0-9]*' }} id=\"standard-basic\" label=\"Video EndTime\" defaultValue={video.EndTime} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) =>  v.EndTime))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                    <div style={{ alignSelf: 'center' }}>\r\n                                                        <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.removeVideo(playlist.Id, video.Id) }}>\r\n                                                            Remove Video\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Prompt\r\n                    when={true}\r\n                    message={(location, action) => this.promptMessageCallback(location, action)}\r\n                />\r\n                <Card variant=\"outlined\" style={{ margin: '12px' }}>\r\n                    <CardContent>\r\n\r\n                        <h2>Playlists</h2>\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n\r\n                        </div>\r\n                        <Select\r\n                            label=\"Playlists\"\r\n                            displayEmpty\r\n                            renderValue={this.state.selectedPlaylist !== undefined ? () => this.state.playlists[this.state.selectedPlaylist!].Name : () => 'Playlists'}\r\n                            defaultValue=\"Playlists\"\r\n                            onChange={e => this.handlePlaylistDropdownChange(e)}\r\n                            style={{ marginRight: '24px', 'minWidth': '200px', marginBottom: '12px' }}\r\n                        >\r\n                            {\r\n                                this.state.playlists.map((playlist, playlistIndex) => {\r\n                                    return (\r\n                                        <MenuItem key={playlist.Id} value={playlistIndex}>#{playlist.Id}: {playlist.Name}</MenuItem>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addPlaylist() }} style={{ marginRight: '12px' }}>\r\n                            Add New Playlist\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.saveChanges() }} style={{ marginRight: '12px' }}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </CardContent>\r\n                </Card>\r\n                {/* Template for each playlist */}\r\n                {element}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Playlists;"],"sourceRoot":""}
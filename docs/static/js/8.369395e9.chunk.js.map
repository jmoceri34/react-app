{"version":3,"sources":["playlists/playlists.component.tsx"],"names":["Playlists","props","state","storedPlaylists","localStorage","getItem","playlists","JSON","parse","length","selectedPlaylist","undefined","window","onbeforeunload","saveChanges","playlist","Id","this","Math","max","apply","map","p","Name","Videos","newPlaylists","push","setState","playlistId","filter","removeState","v","VideoId","StartTime","EndTime","Delay","videoId","e","index","propertyName","target","value","playlistIndex","videoIndex","setItem","stringify","parseInt","location","action","obj","expression","res","Object","keys","k","initial","provided","result","destination","videos","reorder","source","list","startIndex","endIndex","Array","from","splice","removed","element","variant","style","margin","padding","marginBottom","id","label","defaultValue","onChange","handlePlaylistChange","nameof","width","color","onClick","addVideo","removePlaylist","onDragStart","onDragUpdate","onDragEnd","droppableId","snapshot","droppableProps","ref","innerRef","video","draggableId","toString","draggableProps","background","isDragging","display","flexWrap","height","marginRight","dragHandleProps","maxHeight","alt","src","handleVideoChange","type","inputProps","min","inputMode","pattern","alignSelf","removeVideo","placeholder","when","message","promptMessageCallback","displayEmpty","renderValue","handlePlaylistDropdownChange","addPlaylist","Component"],"mappings":"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","file":"static/js/8.369395e9.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { Playlist } from \"./playlist.model\";\r\nimport { Prompt } from \"react-router\";\r\nimport * as H from 'history';\r\nimport { Video } from \"./video.model\";\r\nimport { Button, Card, CardContent, MenuItem, Paper, Select, TextField } from \"@mui/material\";\r\nimport { DragDropContext, Draggable, DragStart, DragUpdate, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\r\nimport DragHandleIcon from '@mui/icons-material/DragHandle';\r\n\r\nexport interface PlaylistProps {\r\n}\r\n\r\nexport interface PlaylistState {\r\n    playlists: Playlist[];\r\n    selectedPlaylist: number | undefined;\r\n}\r\n\r\nclass Playlists extends Component<PlaylistProps, PlaylistState> {\r\n\r\n    state: PlaylistState;\r\n\r\n    constructor(props: PlaylistProps) {\r\n        super(props);\r\n\r\n        const storedPlaylists = localStorage.getItem(\"Playlists\");\r\n\r\n        let playlists = storedPlaylists !== null ? JSON.parse(storedPlaylists) : [];\r\n\r\n        if (playlists.length === 0) {\r\n            playlists = JSON.parse(\"[{\\\"Id\\\":1,\\\"Name\\\":\\\"ACâš¡DC Fingerbreaker I\\\",\\\"Videos\\\":[{\\\"Id\\\":1,\\\"Name\\\":\\\"Jailbreak\\\",\\\"VideoId\\\":\\\"HRo2m6RYJpI\\\",\\\"StartTime\\\":\\\"20\\\",\\\"EndTime\\\":\\\"53\\\",\\\"Delay\\\":0},{\\\"Id\\\":2,\\\"Name\\\":\\\"Soul Stripper\\\",\\\"VideoId\\\":\\\"Sn6bfNFUSU0\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"155\\\",\\\"Delay\\\":0},{\\\"Id\\\":3,\\\"Name\\\":\\\"Live Wire\\\",\\\"VideoId\\\":\\\"1gtLgAYCf5Y\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"95\\\",\\\"Delay\\\":0},{\\\"Id\\\":4,\\\"Name\\\":\\\"Let There Be Rock\\\",\\\"VideoId\\\":\\\"OvJrJcVAQQs\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"63\\\",\\\"Delay\\\":0},{\\\"Id\\\":5,\\\"Name\\\":\\\"Who Made Who\\\",\\\"VideoId\\\":\\\"PiZHNw1MtzI\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"205\\\",\\\"Delay\\\":0},{\\\"Id\\\":6,\\\"Name\\\":\\\"Thunderstruck\\\",\\\"VideoId\\\":\\\"v2AC41dglnM\\\",\\\"StartTime\\\":\\\"36\\\",\\\"EndTime\\\":\\\"192\\\",\\\"Delay\\\":0},{\\\"Id\\\":7,\\\"Name\\\":\\\"Dirty Deeds Done Dirt Cheap\\\",\\\"VideoId\\\":\\\"UIE4UjBtx-o\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"60\\\",\\\"Delay\\\":0},{\\\"Id\\\":8,\\\"Name\\\":\\\"Heatseeker\\\",\\\"VideoId\\\":\\\"VWG4-4Y6Z60\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"75\\\",\\\"Delay\\\":0},{\\\"Id\\\":9,\\\"Name\\\":\\\"War Machine\\\",\\\"VideoId\\\":\\\"0W2kXsQ5ZYc\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"53\\\",\\\"Delay\\\":0},{\\\"Id\\\":10,\\\"Name\\\":\\\"Riff Raff\\\",\\\"VideoId\\\":\\\"7S69xWkV4uM\\\",\\\"StartTime\\\":\\\"44\\\",\\\"EndTime\\\":\\\"121\\\",\\\"Delay\\\":0},{\\\"Id\\\":11,\\\"Name\\\":\\\"Shot Down In Flames\\\",\\\"VideoId\\\":\\\"UKwVvSleM6w\\\",\\\"StartTime\\\":\\\"15\\\",\\\"EndTime\\\":\\\"52\\\",\\\"Delay\\\":0},{\\\"Id\\\":12,\\\"Name\\\":\\\"If You Want Blood(You've Got It)\\\",\\\"VideoId\\\":\\\"6EWqTym2cQU\\\",\\\"StartTime\\\":\\\"35\\\",\\\"EndTime\\\":\\\"70\\\",\\\"Delay\\\":0},{\\\"Id\\\":13,\\\"Name\\\":\\\"Shoot To Thrill\\\",\\\"VideoId\\\":\\\"LIzPbnIp2QM\\\",\\\"StartTime\\\":\\\"12\\\",\\\"EndTime\\\":\\\"83\\\",\\\"Delay\\\":0},{\\\"Id\\\":14,\\\"Name\\\":\\\"Chase The Ace\\\",\\\"VideoId\\\":\\\"oYw-ZTLqIpg\\\",\\\"StartTime\\\":0,\\\"EndTime\\\":\\\"181\\\",\\\"Delay\\\":0}]}]\");\r\n        }\r\n\r\n        let selectedPlaylist = undefined;\r\n\r\n        // show the first playlist if there are any\r\n        if (playlists.length > 0) {\r\n            selectedPlaylist = 0;\r\n        }\r\n\r\n        this.state = {\r\n            playlists: playlists,\r\n            selectedPlaylist: selectedPlaylist\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onbeforeunload = () => {\r\n\r\n            // save on page refresh\r\n            this.saveChanges();\r\n\r\n            return '';\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.onbeforeunload = null;\r\n    }\r\n\r\n    addPlaylist(): void {\r\n\r\n        let playlist = {\r\n            Id: this.state.playlists.length > 0 ? Math.max.apply(Math, this.state.playlists.map((p) => { return p.Id })) + 1 : 1,\r\n            Name: '',\r\n            Videos: []\r\n        };\r\n\r\n        let newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists.push(playlist);\r\n\r\n        this.setState({\r\n            playlists: newPlaylists,\r\n            selectedPlaylist: newPlaylists.length - 1 // move to the new playlist\r\n        });\r\n    }\r\n\r\n    removePlaylist(playlistId: number): void {\r\n        let newPlaylists = [...this.state.playlists];\r\n        newPlaylists = newPlaylists.filter(p => p.Id !== playlistId);\r\n\r\n        let playlist = this.state.playlists[this.state.selectedPlaylist!];\r\n\r\n        // if you're on the playlist, remove the state and show empty\r\n        let removeState = playlist.Id === playlistId;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists,\r\n            selectedPlaylist: removeState ? undefined : this.state.selectedPlaylist\r\n        });\r\n    }\r\n\r\n    addVideo(playlistId: number): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n        let selectedPlaylist = newPlaylists.filter((p) => p.Id === playlistId)[0];\r\n\r\n        selectedPlaylist.Videos.push({\r\n            Id: selectedPlaylist.Videos.length > 0 ? Math.max.apply(Math, selectedPlaylist.Videos.map((v) => { return v.Id })) + 1 : 1,\r\n            Name: '',\r\n            VideoId: '',\r\n            StartTime: 0,\r\n            EndTime: 0,\r\n            Delay: 0\r\n        });\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    removeVideo(playlistId: number, videoId: number): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        let selectedPlaylist = newPlaylists.filter((p) => p.Id === playlistId)[0];\r\n\r\n        selectedPlaylist.Videos = selectedPlaylist.Videos.filter(v => v.Id !== videoId);\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    handlePlaylistChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number, propertyName: string): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists[index][propertyName] = e.target.value;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    handleVideoChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, playlistIndex: number, videoIndex: number, propertyName: string): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists[playlistIndex].Videos[videoIndex][propertyName] = e.target.value;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    saveChanges(): void {\r\n        localStorage.setItem(\"Playlists\", JSON.stringify(this.state.playlists));\r\n    }\r\n\r\n    handlePlaylistDropdownChange(e: any): void {\r\n\r\n        // save automatically when changing drop down\r\n        this.saveChanges();\r\n\r\n        this.setState({\r\n            selectedPlaylist: parseInt(e.target.value)\r\n        });\r\n    }\r\n\r\n    promptMessageCallback(location: H.Location, action: H.Action): string | boolean {\r\n        // save when navigating away\r\n        this.saveChanges();\r\n\r\n        // good to transition after\r\n        return true;\r\n    }\r\n\r\n    nameof<T>(obj: T, expression: Function): string {\r\n        const res: any = {};\r\n\r\n        Object.keys(obj).map(k => res[k] = () => k);\r\n\r\n        let result = expression(res)();\r\n\r\n        return result;\r\n    }\r\n\r\n    onDragStart(initial: DragStart, provided: ResponderProvided): void {\r\n\r\n    }\r\n\r\n    onDragUpdate(initial: DragUpdate, provided: ResponderProvided): void {\r\n\r\n    }\r\n\r\n    onDragEnd(result: DropResult, provided: ResponderProvided): void {\r\n        let playlists = [...this.state.playlists];\r\n\r\n        // dropped outside the list\r\n        if (result.destination) {\r\n            const videos = this.reorder(\r\n                this.state.playlists[this.state.selectedPlaylist!].Videos,\r\n                result.source.index,\r\n                result.destination.index\r\n            );\r\n\r\n\r\n            playlists[this.state.selectedPlaylist!].Videos = videos;\r\n        }\r\n\r\n\r\n        this.setState({\r\n            playlists: playlists\r\n        });\r\n    }\r\n\r\n    reorder(list: any[], startIndex: number, endIndex: number) {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n\r\n        return result;\r\n    };\r\n\r\n    render() {\r\n\r\n        let element: JSX.Element | undefined = undefined;\r\n\r\n        if (this.state.selectedPlaylist !== undefined) {\r\n            let playlist = this.state.playlists[this.state.selectedPlaylist];\r\n            let playlistIndex = this.state.selectedPlaylist;\r\n            element = (\r\n                <Card variant=\"outlined\" style={{ margin: '12px', padding: '0 !important' }} key={playlist.Id}>\r\n                    <CardContent style={{ padding: '0 !important' }}>\r\n                        <div>\r\n                            <div style={{ marginBottom: '12px' }}>\r\n                                <TextField id=\"standard-basic\" label=\"Playlist Name\" defaultValue={playlist?.Name} onChange={e => this.handlePlaylistChange(e, playlistIndex, this.nameof(playlist, (p: Playlist) => p.Name))} style={{ width: \"400px\", \"marginRight\": \"12px\" }} />\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addVideo(playlist.Id) }} style={{ 'marginTop': \"12px\", \"marginRight\": '12px' }}>\r\n                                    Add Video\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.removePlaylist(playlist.Id) }} style={{ 'marginTop': \"12px\" }}>\r\n                                    Remove Playlist\r\n                                </Button>\r\n                            </div>\r\n                            <DragDropContext\r\n                                onDragStart={(initial: DragStart, provided: ResponderProvided) => this.onDragStart(initial, provided)}\r\n                                onDragUpdate={(initial: DragUpdate, provided: ResponderProvided) => this.onDragUpdate(initial, provided)}\r\n                                onDragEnd={(result: DropResult, provided: ResponderProvided) => this.onDragEnd(result, provided)}>\r\n                                <Droppable droppableId=\"droppable\">\r\n                                    {(provided, snapshot) => (\r\n                                        <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                            {\r\n                                                playlist.Videos.map((video, videoIndex) => {\r\n                                                    return (\r\n                                                        <Draggable key={video.Id} draggableId={video.Id.toString()} index={videoIndex}>\r\n                                                            {\r\n                                                                (provided, snapshot) => {\r\n                                                                    return (\r\n                                                                        <div\r\n                                                                            ref={provided.innerRef}\r\n                                                                            {...provided.draggableProps}\r\n                                                                            {...provided.draggableProps.style}\r\n                                                                        >\r\n                                                                            <Card variant=\"outlined\" style={{ \"padding\": \"12px\", background: snapshot.isDragging ? 'lightgreen' : '#fff' }} key={video.Id}>\r\n                                                                                <CardContent>\r\n                                                                                    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                                                                                        <Paper style={{ width: '24px', display: 'inline-block', height: '45px', marginRight: '12px' }} {...provided.dragHandleProps}>\r\n                                                                                            <DragHandleIcon color=\"primary\" style={{ height: '45px', maxHeight: '45px' }} />\r\n                                                                                        </Paper>\r\n                                                                                        <img alt={video.Name} src={\"https://img.youtube.com/vi/\" + video.VideoId + \"/hqdefault.jpg\"} style={{ width: '80x', height: '45px', \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                                        <TextField id=\"standard-basic\" label=\"Video Name\" defaultValue={video.Name} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.Name))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                                        <TextField id=\"standard-basic\" label=\"Video VideoId\" defaultValue={video.VideoId} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.VideoId))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                                        <TextField type=\"number\" inputProps={{ min: 0, inputMode: 'numeric', pattern: '[0-9]*' }} id=\"standard-basic\" label=\"Video StartTime\" defaultValue={video.StartTime} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.StartTime))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                                        <TextField type=\"number\" inputProps={{ min: 0, inputMode: 'numeric', pattern: '[0-9]*' }} id=\"standard-basic\" label=\"Video EndTime\" defaultValue={video.EndTime} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.EndTime))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                                        <TextField type=\"number\" inputProps={{ min: 0, inputMode: 'numeric', pattern: '[0-9]*' }} id=\"standard-basic\" label=\"Video Delay\" defaultValue={video.Delay} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, this.nameof(video, (v: Video) => v.Delay))} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                                                        <div style={{ alignSelf: 'center' }}>\r\n                                                                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.removeVideo(playlist.Id, video.Id) }}>\r\n                                                                                                Remove Video\r\n                                                                                            </Button>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </CardContent>\r\n                                                                            </Card>\r\n                                                                        </div>\r\n                                                                    );\r\n                                                                }\r\n                                                            }\r\n                                                        </Draggable>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    )}\r\n                                </Droppable>\r\n                            </DragDropContext>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Prompt\r\n                    when={true}\r\n                    message={(location, action) => this.promptMessageCallback(location, action)}\r\n                />\r\n                <Card variant=\"outlined\" style={{ margin: '12px' }}>\r\n                    <CardContent>\r\n\r\n                        <h2>Playlists</h2>\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n\r\n                        </div>\r\n                        <Select\r\n                            label=\"Playlists\"\r\n                            displayEmpty\r\n                            renderValue={this.state.selectedPlaylist !== undefined ? () => this.state.playlists[this.state.selectedPlaylist!].Name : () => 'Playlists'}\r\n                            defaultValue=\"Playlists\"\r\n                            onChange={e => this.handlePlaylistDropdownChange(e)}\r\n                            style={{ marginRight: '24px', 'minWidth': '200px', marginBottom: '12px' }}>\r\n                            {\r\n                                this.state.playlists.map((playlist, playlistIndex) => {\r\n                                    return (\r\n                                        <MenuItem key={playlist.Id} value={playlistIndex}>#{playlist.Id}: {playlist.Name}</MenuItem>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addPlaylist() }} style={{ marginRight: '12px' }}>\r\n                            Add New Playlist\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.saveChanges() }} style={{ marginRight: '12px' }}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </CardContent>\r\n                </Card>\r\n                {/* Template for each playlist */}\r\n                {element}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Playlists;"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","playlists/playlists.component.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","require","Playlists","props","state","unsavedChanges","storedPlaylists","localStorage","getItem","playlists","JSON","parse","selectedPlaylist","undefined","playlist","Id","this","Name","Videos","newPlaylists","push","setState","playlistId","filter","p","removeState","VideoId","StartTime","EndTime","videoId","v","e","index","propertyName","target","value","playlistIndex","videoIndex","setItem","stringify","saveChanges","parseInt","location","action","element","Card","variant","style","margin","padding","CardContent","TextField","id","label","defaultValue","onChange","handlePlaylistChange","width","Button","color","onClick","addVideo","removePlaylist","map","video","display","flexWrap","src","height","marginBottom","handleVideoChange","alignSelf","removeVideo","when","message","promptMessageCallback","Select","displayEmpty","renderValue","handlePlaylistDropdownChange","marginRight","MenuItem","addPlaylist","Component"],"mappings":"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","file":"static/js/6.a91516a5.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Button, Card, CardContent, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport { Component } from \"react\";\r\nimport { Playlist } from \"./playlist.model\";\r\nimport { Prompt } from \"react-router\";\r\nimport * as H from 'history';\r\n\r\nrequire('jquery-ui/ui/widgets/slider');\r\n\r\nexport interface PlaylistProps {\r\n}\r\n\r\nexport interface PlaylistState {\r\n    playlists: Playlist[];\r\n    selectedPlaylist: number | undefined;\r\n}\r\n\r\nclass Playlists extends Component<PlaylistProps, PlaylistState> {\r\n\r\n    state: PlaylistState;\r\n    unsavedChanges: boolean;\r\n\r\n    constructor(props: PlaylistProps) {\r\n        super(props);\r\n\r\n        const storedPlaylists = localStorage.getItem(\"Playlists\");\r\n\r\n        let playlists = storedPlaylists !== null ? JSON.parse(storedPlaylists) : [];\r\n\r\n        let selectedPlaylist = undefined;\r\n\r\n        // show the first playlist if there are any\r\n        if (playlists.length > 0) {\r\n            selectedPlaylist = 0;\r\n        }\r\n\r\n        this.state = {\r\n            playlists: playlists,\r\n            selectedPlaylist: selectedPlaylist\r\n        };\r\n\r\n        this.unsavedChanges = true;\r\n    }\r\n\r\n    addPlaylist(): void {\r\n\r\n        let playlist = {\r\n            Id: this.state.playlists.length + 1,\r\n            Name: '',\r\n            Videos: []\r\n        };\r\n\r\n        let newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists.push(playlist);\r\n\r\n        this.setState({\r\n            playlists: newPlaylists,\r\n            selectedPlaylist: playlist.Id - 1 // move to the new playlist\r\n        });\r\n    }\r\n\r\n    removePlaylist(playlistId: number): void {\r\n        let newPlaylists = [...this.state.playlists];\r\n        newPlaylists = newPlaylists.filter(p => p.Id !== playlistId);\r\n\r\n        let playlist = this.state.playlists[this.state.selectedPlaylist!];\r\n\r\n        // if  you're on the playlist, remove the state and show empty\r\n        let removeState = playlist.Id === playlistId;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists,\r\n            selectedPlaylist: removeState ? undefined : this.state.selectedPlaylist\r\n        });\r\n    }\r\n\r\n    addVideo(playlistId: number): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n        let selectedPlaylist = newPlaylists.filter((p) => p.Id === playlistId)[0];\r\n\r\n        selectedPlaylist.Videos.push({\r\n            Id: selectedPlaylist.Videos.length + 1,\r\n            Name: '',\r\n            VideoId: '',\r\n            StartTime: 0,\r\n            EndTime: 0\r\n        });\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    removeVideo(playlistId: number, videoId: number): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        let selectedPlaylist = newPlaylists.filter((p) => p.Id === playlistId)[0];\r\n\r\n        selectedPlaylist.Videos = selectedPlaylist.Videos.filter(v => v.Id !== videoId);\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    handlePlaylistChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number, propertyName: string): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists[index][propertyName] = e.target.value;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    handleVideoChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, playlistIndex: number, videoIndex: number, propertyName: string): void {\r\n        const newPlaylists = [...this.state.playlists];\r\n\r\n        newPlaylists[playlistIndex].Videos[videoIndex][propertyName] = e.target.value;\r\n\r\n        this.setState({\r\n            playlists: newPlaylists\r\n        });\r\n    }\r\n\r\n    saveChanges(): void {\r\n        localStorage.setItem(\"Playlists\", JSON.stringify(this.state.playlists));\r\n    }\r\n\r\n    handlePlaylistDropdownChange(e: any): void {\r\n\r\n        // save automatically when changing drop down\r\n        this.saveChanges();\r\n\r\n        this.setState({\r\n            selectedPlaylist: parseInt(e.target.value)\r\n        });\r\n    }\r\n\r\n    promptMessageCallback(location: H.Location, action: H.Action): string | boolean {\r\n        // save when navigating away\r\n        this.saveChanges();\r\n\r\n        // good to transition after\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n\r\n        let element: JSX.Element | undefined = undefined;\r\n\r\n        if (this.state.selectedPlaylist !== undefined) {\r\n            let playlist = this.state.playlists[this.state.selectedPlaylist];\r\n            let playlistIndex = this.state.selectedPlaylist;\r\n            element = (\r\n                <Card variant=\"outlined\" style={{ margin: '12px', padding: '0 !important' }} key={playlist.Id}>\r\n                    <CardContent style={{ padding: '0 !important' }}>\r\n                        <div>\r\n                            {/*<p><strong>Playlist #{playlistIndex + 1}</strong></p>*/}\r\n                            <TextField id=\"standard-basic\" label=\"Playlist Name\" defaultValue={playlist?.Name} onChange={e => this.handlePlaylistChange(e, playlistIndex, \"Name\")} style={{ width: \"400px\", \"marginRight\": \"12px\" }} />\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addVideo(playlist.Id) }} style={{ 'marginTop': \"12px\", \"marginRight\": '12px' }}>\r\n                                Add Video\r\n                            </Button>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.removePlaylist(playlist.Id) }} style={{ 'marginTop': \"12px\" }}>\r\n                                Remove Playlist\r\n                            </Button>\r\n                            {\r\n                                playlist.Videos.map((video, videoIndex) => {\r\n                                    return (\r\n                                        <Card variant=\"outlined\" style={{ \"margin\": \"12px\" }} key={video.Id}>\r\n                                            <CardContent>\r\n                                                <div style={{display: 'flex', flexWrap: 'wrap' }}>\r\n                                                    {/*<p><strong>Playlist #{playlistIndex + 1} Video #{videoIndex + 1}</strong></p>*/}\r\n                                                    <img src={\"https://img.youtube.com/vi/\" + video.VideoId + \"/hqdefault.jpg\"} style={{ width: '80x', height: '45px', \"marginRight\": \"12px\", marginBottom: '12px'}} />\r\n                                                    <TextField id=\"standard-basic\" label=\"Video Name\" defaultValue={video.Name} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, \"Name\")} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                    <TextField id=\"standard-basic\" label=\"Video VideoId\" defaultValue={video.VideoId} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, \"VideoId\")} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                    <TextField id=\"standard-basic\" label=\"Video StartTime\" defaultValue={video.StartTime} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, \"StartTime\")} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                    <TextField id=\"standard-basic\" label=\"Video EndTime\" defaultValue={video.EndTime} onChange={e => this.handleVideoChange(e, playlistIndex, videoIndex, \"EndTime\")} style={{ \"width\": \"200px\", \"marginRight\": \"12px\", marginBottom: '12px' }} />\r\n                                                    <div style={{ alignSelf: 'center' }}>\r\n                                                        <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.removeVideo(playlist.Id, video.Id) }}>\r\n                                                            Remove Video\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Prompt\r\n                    when={this.unsavedChanges}\r\n                    message={(location, action) => this.promptMessageCallback(location, action)}\r\n                />\r\n                <Card variant=\"outlined\" style={{ margin: '12px' }}>\r\n                    <CardContent>\r\n\r\n                        <h2>Playlists</h2>\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n\r\n                        </div>\r\n                        <Select\r\n                            label=\"Playlists\"\r\n                            displayEmpty\r\n                            renderValue={this.state.selectedPlaylist !== undefined ? () => this.state.playlists[this.state.selectedPlaylist!].Name : () => 'Playlists'}\r\n                            defaultValue=\"Playlists\"\r\n                            onChange={e => this.handlePlaylistDropdownChange(e)}\r\n                            style={{ marginRight: '24px', 'minWidth': '200px' }}\r\n                        >\r\n                            {\r\n                                this.state.playlists.map((playlist, playlistIndex) => {\r\n                                    return (\r\n                                        <MenuItem key={playlist.Id} value={playlistIndex}>#{playlist.Id}: {playlist.Name}</MenuItem>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addPlaylist() }} style={{ marginRight: '12px' }}>\r\n                            Add New Playlist\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.saveChanges() }} style={{ marginRight: '12px' }}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </CardContent>\r\n                </Card>\r\n                {/* Template for each playlist */}\r\n                {element}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nexport default Playlists;"],"sourceRoot":""}